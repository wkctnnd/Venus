cmake_minimum_required(VERSION 2.8)
INCLUDE_DIRECTORIES(${VenusInc}/Utility)

ADD_SUBDIRECTORY(File File)
ADD_SUBDIRECTORY(Memory Memory)
ADD_SUBDIRECTORY(Container Container)

FILE(GLOB COMMON_SOURCE ${VenusSrc}/Utility/*.cpp)
FILE(GLOB COMMON_HEAD ${VenusInc}/Utility/*.h)

FILE(GLOB_RECURSE AUXILIARY_HEADER ${VenusInc}/Utility/Auxiliary/*.h)
FILE(GLOB_RECURSE AUXILIARY_SOURCE ${VenusSrc}/Utility/Auxiliary/*.cpp)

FILE(GLOB_RECURSE FILE_SOURCE ${VenusSrc}/Utility/File/*.cpp)
FILE(GLOB_RECURSE MAC_FILE_SOURCE ${VenusSrc}/Utility/File/Mac/*.cpp)
FILE(GLOB_RECURSE WIN_FILE_SOURCE ${VenusSrc}/Utility/File/WIN/*.cpp)

FILE(GLOB_RECURSE MEMORY_SOURCE ${VenusSrc}/Utility/Memory/*.cpp)

FILE(GLOB_RECURSE CONTAINER_SOURCE ${VenusSrc}/Utility/Container/*.cpp)
FILE(GLOB_RECURSE CONTAINER_HEADER ${VenusInc}/Utility/Container/*.h)

FILE(GLOB_RECURSE MEMORY_HEADER ${PROJECT_SOURCE_DIR}/include/Utility/Memory/*.h)
FILE(GLOB_RECURSE FILE_HEADER ${PROJECT_SOURCE_DIR}/include/Utility/File/*.h)


List(APPEND sources ${MAC_FILE_SOURCE} ${WIN_FILE_SOURCE} ${FILE_HEADER} ${MEMORY_SOURCE} ${MEMORY_HEADER} ${CONTAINER_HEADER}  ${CONTAINER_SOURCE} ${VenusSrc}/Utility/File/*.cpp ${AUXILIARY_HEADER} ${AUXILIARY_SOURCE})

#source_group_by_dir(sources)

IF(APPLE)
 ADD_LIBRARY(Utility STATIC ${MAC_FILE_SOURCE} ${MEMORY_SOURCE} ${FILE_HEADER} ${MEMORY_HEADER} ${FILE_SOURCE} ${CONTAINER_SOURCE} ${CONTAINER_HEADER} ${COMMON_HEAD} ${COMMON_SOURCE} ${AUXILIARY_HEADER} ${AUXILIARY_SOURCE}) 
 ELSEIF(WIN32)
  ADD_LIBRARY(Utility STATIC ${WIN_FILE_SOURCE} ${MEMORY_SOURCE} ${FILE_HEADER} ${MEMORY_HEADER} ${FILE_SOURCE} ${CONTAINER_SOURCE} ${CONTAINER_HEADER} ${COMMON_HEAD} ${COMMON_SOURCE} ${AUXILIARY_HEADER} ${AUXILIARY_SOURCE})
endif()